{"version":3,"file":"static/js/765.7fe408e3.chunk.js","mappings":"kMACA,MAAMA,EAAU,mCAEhBC,EAAAA,EAAMC,SAASC,QAAU,gCAElB,MAAMC,EAAcC,gBACFJ,EAAAA,EAAMK,IAAI,8BAADC,OAA+BP,KAC/CQ,KAGLC,EAAeJ,gBACHJ,EAAAA,EAAMK,IAAI,wBAADC,OACNP,EAAO,0BAAAO,OAAyBG,EAAK,iCAE/CF,KAGLG,EAAkBN,gBACNJ,EAAAA,EAAMK,IAAI,SAADC,OACrBK,EAAE,aAAAL,OAAYP,EAAO,qBAEhBQ,KAGLK,EAAkBR,gBACNJ,EAAAA,EAAMK,IAAI,SAADC,OACrBK,EAAE,qBAAAL,OAAoBP,EAAO,qBAExBQ,KAGLM,EAAaT,gBACDJ,EAAAA,EAAMK,IAAI,SAADC,OACrBK,EAAE,qBAAAL,OAAoBP,EAAO,4BAExBQ,I,uGC7BlB,MA6BA,EA7BaO,KACX,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IACzCC,GAAWC,EAAAA,EAAAA,OACVC,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,GAU3C,OARAK,EAAAA,EAAAA,YAAU,KACRD,GAAa,IACblB,EAAAA,EAAAA,MAAcoB,MAAKhB,IACjBS,EAAeT,EAAKiB,SACpBH,GAAa,EAAM,GACnB,GACD,KAGDI,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAAAF,SAAC,0BACPD,EAAAA,EAAAA,MAACI,EAAAA,GAAS,CAAAH,SAAA,CACPX,EAAYe,KAAIC,IACfJ,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAACC,GAAE,WAAA3B,OAAayB,EAAMpB,IAAMuB,MAAO,CAAEC,KAAMjB,GAAWQ,SAC7DK,EAAMK,gBAAkBL,EAAMM,QAF1BN,EAAMpB,MAMhBS,IAAaO,EAAAA,EAAAA,KAACW,EAAAA,EAAM,SAElB,C,wFC7BJ,MAAMN,GAAYO,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2JASxBb,EAAYU,EAAAA,GAAOI,GAAEC,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gHAQrBd,EAAQW,EAAAA,GAAOM,GAAEC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mD","sources":["Api/apiService.js","Pages/Home/Home.jsx","Pages/Home/Home.styled.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'af0d5f243de6f7a5bfa482911cb42a9e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n}; //Artur//\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { MovieLink, MovieList, Title } from './Home.styled';\nimport { getTrending } from '../../Api/apiService';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTrending().then(data => {\n      setTrendMovies(data.results);\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <main>\n      <Title>Top Movies for today</Title>\n      <MovieList>\n        {trendMovies.map(movie => (\n          <li key={movie.id}>\n            <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.original_title || movie.name}\n            </MovieLink>\n          </li>\n        ))}\n        {isLoading && <Loader />}\n      </MovieList>\n    </main>\n  );\n};\nexport default Home;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  padding: 2px 8px;\n\n  &:hover {\n    border-radius: 5px;\n    box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n  }\n`;\nexport const MovieList = styled.ul`\n  padding: 20px 0 20px;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 40px;\n  margin-bottom: 0;\n`;\n"],"names":["API_KEY","axios","defaults","baseURL","getTrending","async","get","concat","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","Home","trendMovies","setTrendMovies","useState","location","useLocation","isLoading","setIsLoading","useEffect","then","results","_jsxs","children","_jsx","Title","MovieList","map","movie","MovieLink","to","state","from","original_title","name","Loader","styled","Link","_templateObject","_taggedTemplateLiteral","ul","_templateObject2","h2","_templateObject3"],"sourceRoot":""}